<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** Facility Data Module                                ** -->
<!-- **	                                                    ** -->
<!-- ** @author Robby O'Connor                              ** -->
<!-- ** @author Partners In Health                          ** -->
<!-- ** @version 1.0                                        ** -->
<!-- ********************************************************* -->
<project name="facilitydata" default="package-module">
	
	<tstamp>
		<format property="timestamp" pattern="MMM dd yyyy hh:mm aa" />
	</tstamp>
	
	<!-- *********************************************************** -->
	<!-- **                 BUILD PROPERTIES                      ** -->
	<!-- *********************************************************** -->
	<property environment="env"/>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="lib-common/ant-contrib-1.0b2.jar"/>
	
	<available file="${env.OPENMRS_BUILD_PROPERTIES_FILE}" property="env.file.exists"/>
	<available file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties" property="appdata.file.exists"/>
	<available file="${user.home}/.OpenMRS/OPENMRS-build.properties" property="unix.file.exists"/>
	<if>
		<equals arg1="${env.file.exists}" arg2="true" />
		<then><property file="${env.OPENMRS_BUILD_PROPERTIES_FILE}"/></then>
		<elseif>
			<equals arg1="${appdata.file.exists}" arg2="true" />
			<then><property file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<elseif>
			<equals arg1="${unix.file.exists}" arg2="true" />
			<then><property file="${user.home}/.OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<else><echo message="WARNING: No build properties found"/></else>
	</if>
		
	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init" description="initialization">
		<xmlcatalog id="common-dtds">
	        <dtd 
	            publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN"
	            location="lib-common/config-1.0.dtd"/>
	    </xmlcatalog>
		
		<xmlproperty file="metadata/config.xml" >
			<xmlcatalog refid="common-dtds"/>
		</xmlproperty>
		
		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}" />
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>
		
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
				<exclude name="*openmrs*1.4*.jar"/>
			</fileset>
		</path>

	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build" />
	</target>

	<target name="compile-module" depends="init" description="Compiles the module">
		<mkdir dir="build" />
		
		<!-- Copy other source data to the build folder -->
		<copy todir="build">
			<fileset dir="src/" excludes="**/*.java" />
		</copy>
		
		<!--  Compile module java files -->
		<javac destdir="build" classpathref="classpath" debug="true" target="1.5" debuglevel="lines,vars,source">
			<src path="src/" />
			<include name="**/*.java" />
		</javac>
		
		<!--  Compile module web java files -->
		<javac destdir="build" classpathref="classpath" debug="true" target="1.5" debuglevel="lines,vars,source">
			<compilerarg line="-g" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>
		
	</target>
	
	<target name="package-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy module metadata -->
		<copy todir="build/">
			<fileset dir="metadata/" includes="**/*" excludes="log4j.xml" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<delete>
			<fileset dir="build">
	    		<include name="config14x.xml"/>
			</fileset>
		</delete>
		
		<!-- Copy module web data -->
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="**/*" excludes="resources/**/*" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<!-- Copy the /web/resources folder separately so that image files are not corrupted --> 
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="resources/**/*" />
		</copy>
		
		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.omod">
			<fileset dir="build">
				<include name="**/*" />
				<exclude name="**/*Test*.class" />
				<exclude name="**/CreateInitialDataSet.class" />
				<exclude name="**/test/**/*" />				
			</fileset>
				
		</jar>
	</target>
	
	<target name="package-module-14x" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy module metadata -->
		<copy todir="build/">
			<fileset dir="metadata/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<delete>
			<fileset dir="build">
	    		<include name="config.xml"/>
			</fileset>
		</delete>

		<rename dest="build/config.xml" src="build/config14x.xml"/>
		
		<!-- Copy module web data -->
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="**/*" excludes="resources/**/*" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<!-- Copy the /web/resources folder separately so that image files are not corrupted --> 
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="resources/**/*" />
		</copy>
		
		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.omod">
			<fileset dir="build">
				<include name="**/*" />
				<exclude name="**/*Test*.class" />
				<exclude name="**/CreateInitialDataSet.class" />
				<exclude name="**/test/**/*" />
			</fileset>			
		</jar>
	</target>
	
	<target name="deploy-web" depends="package-module" description="Copy web files to webapp">
		<copy todir="${tomcat.home}/webapps/openmrs/WEB-INF/view/module/${module.id}">
			<fileset dir="web/module" includes="**/*" />
		</copy>
	</target>
	
	<target name="deploy-web-jetty" depends="package-module" description="Copy web files to webapp">
		<copy todir="/home/dupuy/workspace/openmrs-trunk/webapp/src/main/webapp/WEB-INF/view/module/${module.id}">
			<fileset dir="web/module" includes="**/*" />
		</copy>
	</target>
		
	<target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.jar">
			<fileset dir="build" >
				<exclude name="web/**/*" />
				<exclude name="test/**/*" />
			</fileset>
		</jar>
	</target>
	
	<target name="javadoc" description="packages documentation into /dist/javadoc/" depends="init">
		<delete dir="dist/javadoc" />
		<javadoc packagenames="org.openmrs.*" destdir="dist/javadoc" classpathref="classpath" 
			author="true" version="true" 
			windowtitle="${module.name} module"
			bottom="${module.name} version: ${module.version}. Generated ${timestamp}.">
			
			<tag name="should" scope="all" description="Expected behavior: " />
			<packageset dir="src" defaultexcludes="yes">
				<include name="org/openmrs/**" />
				<exclude name="**/.svn" />
			</packageset>
			<packageset dir="web/src" defaultexcludes="yes">
				<include name="org/openmrs/**" />
				<exclude name="**/.svn" />
			</packageset>
		</javadoc>
		
		<property name="outputfile" value="dist/javadoc-${module.id}-${module.version}.zip"></property>
		<delete file="${outputfile}" />
		<zip destfile="${outputfile}" basedir="dist/javadoc" includes="**/*" />
	</target>

</project>